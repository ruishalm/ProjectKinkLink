.sideMessagesContainer {
  position: absolute; /* Posicionado em relação ao cardStackContainer */
  top: 20px; /* Ajusta a distância do topo da área da carta. Experimente este valor. */
  /* A rotação (transform) é definida nas classes .left e .right */
  width: auto; 
  max-width: 160px; /* Largura máxima para as dicas */
  display: flex;
  flex-direction: column;
  /* gap: 25px; Não tem efeito com uma única dica por container */
  z-index: 6; /* Acima da pilha de cartas (que tem z-index 5 no container) e do conteúdo da carta */
  pointer-events: none; /* Para não interferir com cliques */
  /* padding: 0 10px; O padding agora está no .tipMessage */
  opacity: 0; /* Inicialmente invisível para o fade-in */
  /* A transição de opacidade será movida para .animateIn para garantir desaparecimento instantâneo */
  box-sizing: border-box;
}

.left {
  /* 'left' será definido por style inline para alinhar com a carta */
  /* Em telas menores, o CSS na media query controlará 'left' */
  align-items: flex-start;
  transform: rotate(-33deg); /* Inclinação para a esquerda, sem translateY */
}

.right {
  /* 'right' será definido por style inline para alinhar com a carta */
  /* Em telas menores, o CSS na media query controlará 'right' */
  align-items: flex-end;
  transform: rotate(33deg); /* Inclinação para a direita, sem translateY */
}

.tipMessage {
  font-size: 1rem; /* Tamanho da fonte ajustável */
  color: rgba(255, 255, 255, 0.65); /* Texto um pouco mais visível */
  /* background-color: rgba(0, 0, 0, 0.15); /* Fundo removido */
  padding: 8px 12px;
  border-radius: 8px;
  text-align: center;
  line-height: 1.3;
  /* Adicionando uma leve sombra para melhor legibilidade contra fundos variados */
  text-shadow: 0px 1px 3px rgba(0,0,0,0.7);
}
.animateIn {
  opacity: 1; /* Torna visível com a animação */
  transition: opacity 0.7s ease-in-out; /* Transição suave APENAS para o fade-in */
}


/* Ajustes responsivos */
@media (max-width: 767px) { /* Breakpoint para telas pequenas */
  .sideMessagesContainer {
    /* Ajusta 'top' para garantir que as dicas fiquem visivelmente acima das cartas.
       Considerando que o cardStackContainer tem padding-top: 20px e as cartas estão no fundo,
       um 'top' menor ou até negativo (se o pai não tiver padding suficiente) pode ser necessário.
       Vamos tentar um valor que as posicione claramente na parte superior do cardStackContainer. */
    top: 10px; /* Sobe um pouco mais em relação ao topo do cardStackContainer */
    max-width: 120px; /* Dicas um pouco menores */
    /* gap: 15px; /* Não tem efeito com uma única dica por container */
  }

  /* Quando isSmallScreen é true no JS, os estilos inline de left/right não são aplicados.
     Estas regras definirão o posicionamento horizontal e a rotação. */
  .sideMessagesContainer.left {
    left: 5%; /* "Entra mais" para dentro da tela */
    transform: rotate(-15deg); /* Rotação mais suave */
    right: auto; /* Garante que 'right' não interfira se definido em outro lugar */
  }
  .sideMessagesContainer.right {
    right: 5%; /* "Entra mais" para dentro da tela */
    transform: rotate(15deg); /* Rotação mais suave */
    left: auto; /* Garante que 'left' não interfira se definido em outro lugar */
  }

  .tipMessage {
    font-size: 0.85rem;
    padding: 6px 10px;
  }
}